{{- $values := $.Values.fullMode }}
{{- $componentName := "beacon" }}
{{- $componentLabel := include "firehose-ethereum.componentLabelFor" $componentName }}
{{- if and (eq .Values.mode "full") $values.components.lighthouse.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-firehose-{{ $componentName }}
  labels:
    {{- include "firehose-ethereum.labels" . | nindent 4 }}
    {{- $componentLabel | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "firehose-ethereum.selectorLabels" . | nindent 6 }}
      {{- $componentLabel | nindent 6 }}
  replicas: {{ $values.components.lighthouse.replicas }}
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ $.Values.fullMode.storage.storageClass | quote }}
        resources:
          requests:
            storage: {{ $.Values.fullMode.storage.lighthouse.size | quote }}
  template:
    metadata:
      {{- with $values.components.lighthouse.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "firehose-ethereum.selectorLabels" . | nindent 8 }}
        {{- $componentLabel | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "firehose-ethereum.serviceAccountName" . }}
      {{- with $values.components.lighthouse.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      containers:
        - name: {{ $componentName }}
          image: "{{ $values.components.lighthouse.image.repository }}:{{ $values.components.lighthouse.image.tag }}"
          imagePullPolicy: {{ $values.components.lighthouse.image.pullPolicy }}
          command:
            - lighthouse
          args:
            - beacon_node
            - --datadir=/data
            - --http
            - --http-address=0.0.0.0
            - --execution-jwt=/jwt/jwt.hex
            - --network={{ $values.components.lighthouse.config.network }}
            - --checkpoint-sync-url={{ $values.components.lighthouse.config.checkpointSyncUrl }}
            - --execution-endpoint=http://{{ .Release.Name }}-firehose-reader-svc:8551
            - --prune-blobs={{ $values.components.lighthouse.config.pruneBlobs }}
            - --metrics
            - --metrics-address=0.0.0.0
            {{- with $values.components.lighthouse.extraArgs }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with $values.components.lighthouse.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http-api
              containerPort: 5052
              protocol: TCP
            - name: http-metrics
              containerPort: 5054
              protocol: TCP
          volumeMounts:
            - name: storage
              mountPath: /data
            - name: jwt-secret
              mountPath: /jwt
              readOnly: true
      volumes:
        - name: jwt-secret
          secret:
            secretName: {{ .Release.Name }}-firehose-jwt
{{- end }}